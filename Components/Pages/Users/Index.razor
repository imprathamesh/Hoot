@page "/Users"
@using Hoot.Helpers
@using Hoot.Services
@using Hoot.Services.Users
@using Hoot.ViewModels
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@attribute [Authorize(Roles = Roles.Admin)]

@inject IUserService _userService

<h3>Users</h3>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Created On</th>
            <th>Is Email Verified</th>
        </tr>
    </thead>
    <tbody>
        @if (users is not null)
        {
            foreach (var item in users)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Email</td>
                    <td>@item.CreatedOn</td>
                    <td>@item.EmailConfirmed</td>
                </tr>
            }
        }
    </tbody>
</table>
@if (claims is not null)
{
    @foreach (var item in claims)
    {
        @item.Key
        @item.Value
    }

}
@code {
    IEnumerable<UserViewModel>? users;

    Dictionary<string, string> claims = new();

    protected override async Task OnInitializedAsync()
    {
        users = await _userService.Get();

        claims = _userService.GetClaims();


    }

}
